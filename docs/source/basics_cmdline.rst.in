.. The content of this file was auto-generated by your mad uncle from Germany
   using the cast2rst script and a recorded asciicast as input.

   Do not edit this file!



All of DataLad's functionality is available through a single command:
`datalad`

Running the datalad command without any arguments, gives a summary
of basic options, and a list of available sub-commands.

.. code-block:: ansi-color

   [1;36m~[0m % datalad
   usage: datalad [-h] [-l LEVEL] [--pbs-runner {condor}] [-C PATH] [--version]
                  [--dbg] [--idbg] [-c KEY=VALUE]
                  [-f {default,json,json_pp,tailored,'<template>'}]
                  [--report-status {success,failure,ok,notneeded,impossible,error}]
                  [--report-type {dataset,file}]
                  [--on-failure {ignore,continue,stop}] [--cmd]
                  {create,install,get,publish,uninstall,drop,remove,update,create-sibling,create-sibling-github,unlock,save,search,metadata,aggregate-metadata,test,ls,clean,add-archive-content,download-url,run,rerun,addurls,export-archive,extract-metadata,export-to-figshare,no-annex,wtf,add-readme,annotate-paths,clone,create-test-dataset,diff,siblings,sshrun,subdatasets}
                  ...
   [[1;31mERROR  [0m] Please specify the command 
   [0m[1;36m~[0m % #

More comprehensive information is available via the --help
long-option (we will truncate the output here)

.. code-block:: ansi-color

   [1;36m~[0m % datalad --help       | head -n20
   Usage: datalad [global-opts] command [command-opts]
   
   DataLad provides a unified data distribution with the convenience of git-annex
   repositories as a backend.  DataLad command line tools allow to manipulate
   (obtain, create, update, publish, etc.) datasets and their collections.
   
   *Commands for dataset operations*
   
     create
         Create a new dataset from scratch
     install
         Install a dataset from a (remote) source
     get
         Get any dataset content (files/directories/subdatasets)
     publish
         Publish a dataset to a known sibling
     uninstall
         Uninstall subdatasets


Getting information on any of the available sub commands works
in the same way -- just pass --help AFTER the sub-command (output
again truncated)

.. code-block:: ansi-color

   [1;36m~[0m % datalad create --help       | head -n20
   Usage: datalad create [-h] [-f] [-D DESCRIPTION] [-d PATH] [--no-annex]
                         [--nosave] [--annex-version ANNEX_VERSION]
                         [--annex-backend ANNEX_BACKEND]
                         [--native-metadata-type LABEL] [--shared-access MODE]
                         [--git-opts STRING] [--annex-opts STRING]
                         [--annex-init-opts STRING] [--text-no-annex]
                         [PATH]
   
   Create a new dataset from scratch.
   
   This command initializes a new dataset at a given location, or the
   current directory. The new dataset can optionally be registered in an
   existing superdataset (the new dataset's path needs to be located
   within the superdataset for that, and the superdataset needs to be given
   explicitly). It is recommended to provide a brief description to label
   the dataset's nature *and* location, e.g. "Michael's music on black
   laptop". This helps humans to identify data locations in distributed
   scenarios.  By default an identifier comprised of user and machine name,
   plus path will be generated.
   


 ______________________________________
/ Demo was using datalad 0.9.2.dev803. \
\ Discover more at http://datalad.org  /
 --------------------------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||


.. code-block:: ansi-color

   [1;36m~[0m % d[Kexit
