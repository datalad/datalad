--- a/datalad/cli/helpers.py
+++ b/datalad/cli/helpers.py
@@ -25,7 +25,7 @@ from datalad.support.exceptions import C
 from datalad.ui.utils import get_console_width
 from datalad.utils import is_interactive
 
-from platformdirs import AppDirs
+from appdirs import AppDirs
 
 dirs = AppDirs("datalad", "datalad.org")
 
--- a/datalad/downloaders/tests/test_providers.py
+++ b/datalad/downloaders/tests/test_providers.py
@@ -122,7 +122,7 @@ url_re = https?://crcns\\.org/.*
 authentication_type = none
 """}},
    '.git': { "HEAD" : ""}})
-@patch.multiple("platformdirs.AppDirs", site_config_dir=None, user_config_dir=None)
+@patch.multiple("appdirs.AppDirs", site_config_dir=None, user_config_dir=None)
 def test_Providers_from_config__files(sysdir=None, userdir=None, dsdir=None):
     """Test configuration file precedence
 
@@ -146,14 +146,14 @@ def test_Providers_from_config__files(sy
 
         # Test that the system defaults take precedence over the dataset
         # defaults (we're still within the dsdir)
-        with patch.multiple("platformdirs.AppDirs", site_config_dir=sysdir, user_config_dir=None):
+        with patch.multiple("appdirs.AppDirs", site_config_dir=sysdir, user_config_dir=None):
             providers = Providers.from_config_files(reload=True)
             provider = providers.get_provider('https://crcns.org/data....')
             assert_equal(provider.name, 'syscrcns')
 
         # Test that the user defaults take precedence over the system
         # defaults
-        with patch.multiple("platformdirs.AppDirs", site_config_dir=sysdir, user_config_dir=userdir):
+        with patch.multiple("appdirs.AppDirs", site_config_dir=sysdir, user_config_dir=userdir):
             providers = Providers.from_config_files(reload=True)
             provider = providers.get_provider('https://crcns.org/data....')
             assert_equal(provider.name, 'usercrcns')
@@ -161,7 +161,7 @@ def test_Providers_from_config__files(sy
 
 @with_tempfile(mkdir=True)
 def test_providers_enter_new(path=None):
-    with patch.multiple("platformdirs.AppDirs", site_config_dir=None,
+    with patch.multiple("appdirs.AppDirs", site_config_dir=None,
                         user_config_dir=path):
         providers_dir = op.join(path, "providers")
         providers = Providers.from_config_files(reload=True)
--- a/datalad/interface/common_cfg.py
+++ b/datalad/interface/common_cfg.py
@@ -19,7 +19,7 @@ from os.path import expanduser
 from os.path import join as opj
 import time
 
-from platformdirs import AppDirs
+from appdirs import AppDirs
 
 from datalad.support.constraints import (
     EnsureBool,
--- a/datalad/local/run_procedure.py
+++ b/datalad/local/run_procedure.py
@@ -225,10 +225,10 @@ class RunProcedure(Interface):
     Directories identified by the configuration settings
 
     - 'datalad.locations.user-procedures' (determined by
-      platformdirs.user_config_dir; defaults to '$HOME/.config/datalad/procedures'
+      appdirs.user_config_dir; defaults to '$HOME/.config/datalad/procedures'
       on GNU/Linux systems)
     - 'datalad.locations.system-procedures' (determined by
-      platformdirs.site_config_dir; defaults to '/etc/xdg/datalad/procedures' on
+      appdirs.site_config_dir; defaults to '/etc/xdg/datalad/procedures' on
       GNU/Linux systems)
     - 'datalad.locations.dataset-procedures'
 
--- a/datalad/support/cookies.py
+++ b/datalad/support/cookies.py
@@ -20,7 +20,7 @@ from typing import (
     Optional,
 )
 
-import platformdirs
+import appdirs
 
 from datalad.support.exceptions import CapturedException
 
@@ -55,7 +55,7 @@ class CookiesDB:
             filename = self._filename
             cookies_dir = os.path.dirname(filename)
         else:
-            cookies_dir = os.path.join(platformdirs.user_config_dir(), 'datalad')  # FIXME prolly shouldn't hardcode 'datalad'
+            cookies_dir = os.path.join(appdirs.user_config_dir(), 'datalad')  # FIXME prolly shouldn't hardcode 'datalad'
             filename = os.path.join(cookies_dir, 'cookies')
 
         # TODO: guarantee restricted permissions
--- a/datalad/support/external_versions.py
+++ b/datalad/support/external_versions.py
@@ -214,7 +214,7 @@ class ExternalVersions(object):
     }
     _INTERESTING = (
         'annexremote',
-        'platformdirs',
+        'appdirs',
         'boto',
         'git',
         'gitdb',
--- a/setup.py
+++ b/setup.py
@@ -24,7 +24,6 @@ from _datalad_build_support.setup import
 
 requires = {
     'core': [
-        'platformdirs',
         'chardet>=3.0.4',      # rarely used but small/omnipresent
         'colorama; platform_system=="Windows"',
         'distro; python_version >= "3.8"',
