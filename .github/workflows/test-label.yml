name: Test for semver label

on:
  pull_request:
    types: [opened, synchronize, reopened, labeled, unlabeled]

jobs:
  test:
    runs-on: ubuntu-latest
    if: github.repository == 'datalad/datalad'
    steps:
      - name: Check that PR does not use "major" since we aren't brave enough
        run: |
          # This should evaluate to either `true` or `false`, which runs the
          # command of the same name.
          ${{
            !contains(github.event.pull_request.labels.*.name, 'semver-major')
          }}
      - name: Check that PR against "maint" branch does not have "minor"
        if: github.event.pull_request.base.label == 'datalad:maint'
        run: |
          ${{
            !contains(github.event.pull_request.labels.*.name, 'semver-minor')
          }}
      - name: Check that PR uses one of the standard "auto" labels
        run: |
          # major is included to stay optimistic, and to not forget later
          ${{
            contains(github.event.pull_request.labels.*.name, 'semver-major')
            || contains(github.event.pull_request.labels.*.name, 'semver-minor')
            || contains(github.event.pull_request.labels.*.name, 'semver-patch')
            || contains(github.event.pull_request.labels.*.name, 'semver-dependencies')
            || contains(github.event.pull_request.labels.*.name, 'semver-documentation')
            || contains(github.event.pull_request.labels.*.name, 'semver-internal')
            || contains(github.event.pull_request.labels.*.name, 'semver-performance')
            || contains(github.event.pull_request.labels.*.name, 'semver-tests')
          }}
  check-sync:
    name: Check that "master" contains everything from "maint" if PR against "master" is marked for a release
    runs-on: ubuntu-latest
    if: github.repository == 'datalad/datalad'
    steps:
      - name: 'Checkout Code'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for all branches to perform the comparison

      - name: 'Check for "release" Label'
        id: check_label
        uses: actions/github-script@v6
        with:
          script: |
            const prLabels = context.payload.pull_request.labels.map(label => label.name);
            core.setOutput('has_release_label', prLabels.includes('release'));

      - name: 'Check Branch Sync'
        if: steps.check_label.outputs.has_release_label == 'true' && github.event.pull_request.base.ref == 'master'
        run: |
          # Fetch the "maint" branch
          git fetch origin maint:maint
          git fetch origin master:master
 
          # Check if "maint" is already merged into "master"
          if git merge-base --is-ancestor maint master; then
            echo "All commits from 'maint' are already merged into 'master'."
          else
            echo "The 'master' branch is missing commits from 'maint'. Please merge the branches before proceeding."
            exit 1
          fi

# vim:set sts=2:
