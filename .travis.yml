# vim ft=yaml
# travis-ci.org definition for DataLad build
language: python

cache:
  - apt

matrix:
  include:
  - python: 2.7
  # no loop dev support on travis yet :-/ https://github.com/travis-ci/travis-ci/issues/2700
  #- python: 2.7
  #  env:
  #  - NOSE_WRAPPER="tools/eval_under_testloopfs"
  - python: 2.7
    env:
    # to test operation under root since also would consider FS "crippled" due to
    # ability to rewrite R/O files
    - NOSE_WRAPPER="sudo -E"
    # no key authentication for root:
    - unset -v DATALAD_TESTS_SSH
  - python: 2.7
    env:
    - DATALAD_TESTS_NONETWORK=1
    # must operate nicely with those env variables set
    - http_proxy=
    - https_proxy=
  - python: 3.3
  - python: 3.4
  # Those aren't yet ready since lxml Ibelieve fails to install
  #- python: pypy
  #- python: pypy3
# not there -- don't try!
# - python: 3.5
# can't since coverage doesn't support it yet: https://bitbucket.org/ned/coveragepy/issues/391/getargspec-was-finally-removed-will-not-be
# - python: nightly

env:
  # to overcome problem with system-wide installed boto on travis
  # see https://github.com/travis-ci/travis-ci/issues/5246
  - BOTO_CONFIG=/tmp/nowhere
  - DATALAD_TESTS_SSH=1

before_install:
  # The ultimate one-liner setup for NeuroDebian repository
  - bash <(wget -q -O- http://neuro.debian.net/_files/neurodebian-travis.sh)
  - travis_retry sudo apt-get update -qq
  - sudo tools/ci/prep-travis-forssh-sudo.sh
  - tools/ci/prep-travis-forssh.sh

install:
  # Install standalone build of git-annex for the recent enough version
  - travis_retry sudo apt-get install git-annex-standalone zip
  # For Python3 compatibility needs never-released master
  - pip install https://github.com/niltonvolpato/python-progressbar/archive/master.zip
  - git config --global user.email "test@travis.land"
  - git config --global user.name "Travis Almighty"
  - git submodule update --init --recursive
  - cd ..; pip install -q coveralls codecov; cd -
  - pip install -r requirements.txt
  # Verify that setup.py build doesn't puke
  - python setup.py build
  - pip install -e .
  # So we could test under sudo -E with PATH pointing to installed location
  - sudo sed -i -e 's/^Defaults.*secure_path.*$//' /etc/sudoers
  # Install sphinx to build/test documentation.  Doesn't take a while, so doing in all envs
  - pip install sphinx

script:
  - if [ ! -z "$DATALAD_TESTS_NONETWORK" ]; then sudo route add -net 0.0.0.0 netmask 0.0.0.0 dev lo; fi
  - DATALAD_LOGLEVEL=INFO $NOSE_WRAPPER `which nosetests` -s -v --with-doctest --with-cov --cover-package datalad --logging-level=INFO
  - if [ ! -z "$DATALAD_TESTS_NONETWORK" ]; then sudo route del -net 0.0.0.0 netmask 0.0.0.0 dev lo; fi
  # Generate documentation and run doctests
  - PYTHONPATH=$PWD/.. make -C docs html doctest

after_success:
  - coveralls
  - codecov

# makes it only more difficult to comprehend the failing output.  Enable only when necessary
# for a particular debugging
#after_failure:
#  - if [ ! -z "$DATALAD_TESTS_NONETWORK" ]; then sudo route add -net 0.0.0.0 netmask 0.0.0.0 dev lo; fi
#  - DATALAD_LOGLEVEL=DEBUG $NOSE_WRAPPER `which nosetests` -s -v --with-doctest --with-cov --cover-package datalad --logging-level=DEBUG
#  - if [ ! -z "$DATALAD_TESTS_NONETWORK" ]; then sudo route del -net 0.0.0.0 netmask 0.0.0.0 dev lo; fi
