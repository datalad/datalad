# vim ft=yaml
# travis-ci.org definition for DataLad build
language: python
cache:
  - apt
matrix:
  include:
  - python: 2.7
    env:
    - secure: "k2rHdTBjUU3pUUASqfRr7kHaaSmNKLLAR2f66A0fFSulih4CXxwLrR3g8/HP9m+jMve8mAYEiPSI7dT7cCm3WMA/piyLh2wKCGgzDD9oLjtvPAioR8dgLpzbgjxV/Vq6fwwPMlvbqqa+MmAImnAoSufEmI7zVQHCq11Hd5nd6Es="
    - secure: "Az7Pzo5pSdAFTTX6XXzE4VUS3wnlIe1vi/+bfHBzDjxstDvZVkPjPzaIs6v/BLod43AYBl1v9dyJR4qnBnaVrUDLB3tC0emLhJ2qnw+8GKHSSImCwIOeZzg9QpXeVQovZUqQVQ3fg3KIWCIzhmJ59EbMQcI4krNDxk4WcXmyVfk="
    # for datalad-prs
    - secure: "GpfstN3A06By4jyC5FwEmFPhwa8MIiWptgaFnK/8nStlSSHtO7fIIuITlzEY7AWPTp606/n+dxNkxnp4ULoswEgF3YwsahBrho25u1H/k/Qb2S6WHa4dubIjLvfsleXHF9hKxk4ZY8He1OUqrgoXvQQDF8PiAVc1G/nuae701dQdb9XTWy52mKG6iyKFCY1DRtOHfjZnFYOdz7Cq/8vy1e+48YtwG1AdnZR0A03Qodz6yNN7KoybE8CIqkcPJHQgviuiBcKqhWts8q7bUUW34PaeQDtt+lgmU9ySdXApJFJYsmLq/jBCcwA/kndmnXNbtwPCs38KVx5S5tzKrCYljBBBrXSaUpW8pYZtmXj373pLW3LDM7F64kJED660yd/gT6BKokj0aEQkZVWUJIZLGmq9wP93sg0BFnEn3ogzpYmGMywtyffF68nfcf04JJp55Bmlb1/wNQsAduz+CORqoi7rgR2FN3PLs1fHISib36jjTZbzD2B83qmEcyjat3B4FLJbuzsv7Oh+cY91+jMNJMC9FlapK/xT8MSf8UZw6rOr3lGrkQCNXMgHikSgZ4vqapczawNvjdIp1y0g5X59dV8KQfTuSIlt+rJjjNbSastFHeBlzrsNGVdKsP5QxSM1rUpvHAX1foYg+GgQaVGcQQ9hPlK4/80WWOax/TWJMes="
    - secure: "wv+RKzNV3oF/3pXpJRk1dLr6vZVEj3hNaKyhoTTi/mhqloWGs2sd8M7z254XW0eWK/dI69AlfBGsg9XtSwhFlsZaYgK/5qwNXdggqClqBHujcbhxpIC9SfQKYDVvu1tyarYYoh3qaF1/2jYzY1/f2KFz5DXrPd12HrG2hchoLpZFVMMkFnvD1NHhO/Z+5Q0uBQDsIlbcOIKAqIhksuqaLG82uPtD6RVwzR1iCabToPkfbz35YQD3jAUBWzZ80UzFwjM458Tn6z9Ei7XwqNmojo1rAL4qC3W1ro8eEnR1SMJV/bPSNxc9irm6txx7gxl0TotwPx0BmVTpwDrzIDngg1Cyi0I+0fu1n+3u+CM/Jz9uymP0TElspLNRpd3xF8Tz9mwEmQu2czABbhLuabucd4lVgQOUYNetfD8Wc7B2Pbm58Oc5lO16sFnR5bYAD+OyeGDXfzWLit7cdEXRMYTC4sKEOEXlx/tmUwXwY6BogoTa9+xEbvgV2rSTHn6Dd6YrNK2ZWFkoD/ks2Cu3Ok6DOxkA+oT8NNeXyPYYcnsoCGF1FiSzd3+9KA1AXIi2KZsHJaylhYvAsfosBdBnk11NyJsi7bkuZaClAKF+38hNxB8BoSgna+vOurBshMfdO0DxWrZ9N+lNXLHjTSu7XxXkM1ADIHukPO5ee92ylMxEgQ4="
  # no loop dev support on travis yet :-/ https://github.com/travis-ci/travis-ci/issues/2700
  #- python: 2.7
  #  env:
  #  - NOSE_WRAPPER="tools/eval_under_testloopfs"
  - python: 2.7
    # By default no logs will be output. This one is to test with log output at INFO level
    env:
    - DATALAD_LOGLEVEL=INFO
  - python: 2.7
    # By default no logs will be output. This one is to test with low level but dumped to /dev/null
    env:
    - DATALAD_LOGLEVEL=2
    - DATALAD_LOGTARGET=/dev/null
  - python: 2.7
    env:
    # to test operation under root since also would consider FS "crippled" due to
    # ability to rewrite R/O files
    - NOSE_WRAPPER="sudo -E"
    # no key authentication for root:
    - unset -v DATALAD_TESTS_SSH
  - python: 2.7
    env:
    - DATALAD_TESTS_NONETWORK=1
    # must operate nicely with those env variables set
    - http_proxy=
    - https_proxy=
  - python: 2.7
    env:
    - PYTHONPATH=$PWD/tools/testing/bad_internals/_scrapy/
  - python: 2.7
    # To make sure that operates correctly whenever dataset directories have symlinks
    # in their path.
    env:
    # Eventually we will get there, but atm causes a good number of failures
    # - TMPDIR="/tmp/sym ссылка"
    - TMPDIR="/tmp/sym link"
  - python: 2.7
    # To make sure that operates correctly whenever dataset directories have symlinks
    # in their path.
    env:
    # To make orthogonal test where it is not a symlink but a dir with spaces
    - TMPDIR="/tmp/d i r"
  - python: 3.3
  - python: 3.4
  # Those aren't yet ready since lxml I believe fails to install
  #- python: pypy
  #- python: pypy3
# not there -- don't try!
# - python: 3.5
# can't since coverage doesn't support it yet: https://bitbucket.org/ned/coveragepy/issues/391/getargspec-was-finally-removed-will-not-be
# - python: nightly

env:
  # to overcome problem with system-wide installed boto on travis
  # see https://github.com/travis-ci/travis-ci/issues/5246
  - BOTO_CONFIG=/tmp/nowhere
  - DATALAD_TESTS_SSH=1

before_install:
  # The ultimate one-liner setup for NeuroDebian repository
  - bash <(wget -q -O- http://neuro.debian.net/_files/neurodebian-travis.sh)
  - travis_retry sudo apt-get update -qq
  - sudo tools/ci/prep-travis-forssh-sudo.sh
  - tools/ci/prep-travis-forssh.sh
  # Install grunt-cli
  - npm install grunt-cli

install:
  # Install standalone build of git-annex for the recent enough version
  - travis_retry sudo apt-get install git-annex-standalone zip
  # For Python3 compatibility needs never-released master
  - pip install https://github.com/niltonvolpato/python-progressbar/archive/master.zip
  - git config --global user.email "test@travis.land"
  - git config --global user.name "Travis Almighty"
  - git submodule update --init --recursive
  - cd ..; pip install -q codecov; cd -
  - pip install -r requirements.txt
  # Verify that setup.py build doesn't puke
  - python setup.py build
  - pip install -e .
  # So we could test under sudo -E with PATH pointing to installed location
  - sudo sed -i -e 's/^Defaults.*secure_path.*$//' /etc/sudoers
  # Install sphinx to build/test documentation.  Doesn't take a while, so doing in all envs
  - pip install sphinx
  - pip install sphinx_rtd_theme
  # TMPDIRs
  - if [ ! -z "$TMPDIR" ] && [ "$TMPDIR" = "/tmp/sym link" ]; then echo "Symlinking $TMPDIR"; ln -s /tmp "$TMPDIR"; fi
  - if [ ! -z "$TMPDIR" ] && [ "$TMPDIR" = "/tmp/d i r" ]; then mkdir -p "$TMPDIR"; fi
  # Install grunt to test run javascript frontend tests
  - npm install grunt
  - npm install grunt-contrib-qunit

script:
  - if [ ! -z "$DATALAD_TESTS_NONETWORK" ]; then sudo route add -net 0.0.0.0 netmask 0.0.0.0 dev lo; fi
  - $NOSE_WRAPPER `which nosetests` -s -v --with-doctest --doctest-tests --with-cov --cover-package datalad --logging-level=INFO
  - if [ ! -z "$DATALAD_TESTS_NONETWORK" ]; then sudo route del -net 0.0.0.0 netmask 0.0.0.0 dev lo; fi
  # Generate documentation and run doctests
  - PYTHONPATH=$PWD make -C docs html doctest
  # Run javascript tests
  - grunt test --verbose

after_success:
  - codecov

# makes it only more difficult to comprehend the failing output.  Enable only when necessary
# for a particular debugging
#after_failure:
#  - if [ ! -z "$DATALAD_TESTS_NONETWORK" ]; then sudo route add -net 0.0.0.0 netmask 0.0.0.0 dev lo; fi
#  - DATALAD_LOGLEVEL=DEBUG $NOSE_WRAPPER `which nosetests` -s -v --with-doctest --doctest-tests --with-cov --cover-package datalad --logging-level=DEBUG
#  - if [ ! -z "$DATALAD_TESTS_NONETWORK" ]; then sudo route del -net 0.0.0.0 netmask 0.0.0.0 dev lo; fi
