#!/bin/bash

# This is a trial error to overcome a problem when using --recurse-all and then
# inspect.isfunction starting to puke on majority of our interfaces

# --recurse-stdlib  leads to some "fancy" errors

#nuitka --exe --python-flag=no_site --recurse-directory=datalad --recurse-to={datalad{,.distribution,.support,.interface},wrapt,six,git,gitdb,argcomplete,iso8601,requests,keyring,appdirs,msgpack,smmap,tqdm,pyld,colorama,docopt,patoolib,urllib3,chardet,_patool_configdata,pkg_resources,backports.ssl_match_hostname,scrapy,cssselect,cssselect.xpath,lxml,lxml.html,w3lib.url,w3lib.http,w3lib.html,w3lib{,.encoding,.util},simplejson,nibabel,humanize,yaml,httpretty,github,jsmin,h5py,bs4,mock,nose,numpy} --recurse-not-to={boto,gtk,pyglet,tornado,matplotlib,twisted,numpy,pandas,vcr,sphinx,zmq,PIL,IPython,OpenGL} `which datalad` 2>&1 | tee $0.log

set -eu

os=linux
thisdir=$(dirname $0)
distdir=dist/nuitka-${os}
version=$(git describe --tags --match '[0-9].*' | sed -e 's,-,+git,')
tarfile=datalad-${os}_${version}.tgz

nuitka_version=$(nuitka --version)
python_version=$(python --version 2>&1)

# Start clean up
rm -rf datalad.dist "$distdir"

# --recurse-plugins=/usr/lib/python2.7/dist-packages/nose/plugins \
# pukes
echo "I: building with nuitka $nuitka_version under $python_version"
mode="--exe --standalone `which datalad`"
#mode="--module datalad"  # --standalone"
#--explain-imports    seems did magic on an old system to include wrapt etc, but suppressed logs
mode+=" --show-progress --verbose"

# cannot specify atm submodules to recurse for plugins
for m in patoolib.programs datalad.plugin; do
    p=`python -c "import $m as m; print(m.__path__[0])"`
    mode+=" --recurse-plugins=$p"
done

# removed per Kay's recommendation --recurse-stdlib 
set -x
nuitka -j 8 --recurse-all --python-flag=no_site \
   --recurse-directory=datalad \
   --explain-imports \
   --recurse-to=setuptools,distribute,nose,mock,httpretty,scrapy,jsmin,github,pkg_resources \
   --recurse-not-to={boto,gtk,pyglet,tornado,matplotlib,twisted,numpy,scipy,pandas,vcr,sphinx,zmq,PIL,IPython,OpenGL} \
   $mode
set +x
# mkdir -p datalad.dist
 
cat >| datalad.dist/build.info << EOF
nuitka: $nuitka_version
python: $python_version
datalad: $version
host: `hostname`
EOF


# shouldn't exist yet, thus no -p
mkdir datalad.dist/bin
cp -p $thisdir/datalad datalad.dist/bin
rsync -a /usr/lib/git-annex.${os} datalad.dist/

cd datalad.dist
# for silly nose
mkdir -p nose
echo "Bundled nose came without docs" > nose/usage.txt

cd bin
# symlinks to git/git-annex we use
find ../git-annex.${os} -maxdepth 1 -type f -perm /o+x | while read f; do
  ln -s $f .
done

# Prepare tarball
cd ../..
mkdir -p "${distdir}"
mv datalad.dist "${distdir}/datalad-$version"
cd "$distdir"

tar -czf $tarfile datalad-$version
echo "I: Done $distdir/$tarfile for version $version"
