#!/bin/bash
#emacs: -*- mode: shell-script; c-basic-offset: 4; tab-width: 4; indent-tabs-mode: t -*- 
#ex: set sts=4 ts=4 sw=4 noet:
# ## ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ##
#
#   See COPYING file distributed along with the datalad package for the
#   copyright and license terms.
#
# ## ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ##

set -e
#set -x
set -u

GH_ORG=datalad
GH_PREFIX=testrepo--

topdir=$(dirname `which $0 | xargs readlink -f `)/../..
topdir=$(readlink -f $topdir)
reposdir=$topdir/datalad/tests/testrepos

flavor="$1"
name="$2"

# Repo specific variables
descr="datalad test repo $flavor/$name"
repodir=$reposdir/$flavor/$name
ghrepo=${GH_ORG}/${GH_PREFIX}$flavor--$name

# Information about the system
git_version=$(git --version | sed -e 's,.* \([0-9]\),\1,g')
annex_version=$(dpkg -l git-annex | awk '/^ii/{print $3;}')

_info() {
	echo "I: $@"
}

create_info_file() {
	cat >| $repodir/INFO.txt <<EOF
git: $git_version
annex: $annex_version
EOF
	git add $repodir/INFO.txt
}

rm_repo() {
	_info "removing $repodir"
	chmod +w -R $repodir/.git  # inefficient but for us sufficient
	rm -rf $repodir
}

create_repo() {
	_info "creating $repodir"
	mkdir -p $repodir
	cd $repodir
	git init
	git annex init $descr
}

create_github_repo() {
	_info "creating github repo"
	cd $repodir
	# it wouldn't delete or complain in exit code if exists already
	hub create -d "$descr (otherwise userless)" $ghrepo
	git remote | grep -q '^origin' || git remote add origin git://github.com/$ghrepo
	git push --set-upstream --all -f origin
}

flavor_basic() {
	create_repo
	create_info_file
	echo "123" > test.dat
	git add test.dat
	git commit -m "Adding a basic INFO file and rudimentary load file for annex testing"
	create_github_repo
#	cp test.dat test-annex.dat
#	git annex add test-annex.dat
	git annex addurl --file=test-annex.dat https://raw.githubusercontent.com/$ghrepo/master/test.dat
	git commit -m "Adding a rudimentary git-annex load file"
	git annex drop test-annex.dat # since available from github
	git push --all origin # and push again
}

if [ -e $repodir ]; then
	# TODO -- ask
	rm_repo
fi

register_repo_submodule() {
	cd $reposdir
	_info "registering git submodule"
	# TODO: verify if not registered already
	#git submodule ...
	git submodule add --force git://github.com/$ghrepo ./$flavor/$name && \
		git commit -m "Added test $flavor/$name" -a && \
		git push origin
}

# cd datalad/tests/testrepos
# hub create -d "Super-submodule collating test repositories for datalad" datalad/testrepos

case $flavor in
	basic) flavor_basic;;
	*) echo "Uknown flavor $flavor";
	   exit 1;;
esac

register_repo_submodule
